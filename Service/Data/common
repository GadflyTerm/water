USE [master]
GO

/****** Object:  StoredProcedure [dbo].[proc_get_datetime]    Script Date: 12/20/2016 13:27:30 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- 根据指定时间（默认当前时间截）返回当天、昨天、明天时间截和年、月、日、时、分、秒和当前所在月的最后一天数据
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE [NAME] = 'proc_get_datetime' AND [XTYPE] = 'P')
	DROP PROCEDURE [dbo].[proc_get_datetime]
GO
CREATE PROCEDURE [dbo].[proc_get_datetime] 
	@getdate datetime = GETDATE()
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @today datetime,		-- 给定时间的当天的时间截
		@yestday datetime,				-- 给定时间的昨天的时间截
		@tomorrow datetime, 			-- 给定时间的明天的时间截
		@hour INT, 								-- 给定时间的小时数
		@minute INT,							-- 给定时间的分钟数
		@second INT,							-- 给定时间的秒数
		@year INT, 								-- 给定时间的年份数
		@month INT, 							-- 给定时间的月份数
		@day INT, 								-- 给定时间的天数
		@lastday VARCHAR(20);			-- 给定时间当月的最后一天天数
	SET @hour = DATENAME(hour, @getdate);
	SET @minute = DATENAME(minute, @getdate);
	SET @second = DATENAME(second, @getdate);
  IF(@hour > 8)
		begin
			SET @yestday = CONVERT(varchar(100), @getdate-1, 23) + ' 08:00:00';
			SET @today = CONVERT(varchar(100), @getdate, 23) + ' 08:00:00';
			SET @tomorrow = CONVERT(varchar(100), @getdate+1, 23) + ' 08:00:00';
		end
	ELSE
		begin
			SET @yestday = CONVERT(varchar(100), @getdate-2, 23) + ' 08:00:00';
			SET @today = CONVERT(varchar(100), @getdate-1, 23) + ' 08:00:00';
			SET @tomorrow = CONVERT(varchar(100), @getdate, 23) + ' 08:00:00';
		end
	SET @year = DATENAME(year, @today);
	SET @month = DATENAME(month, @today);
	SET @day = DATENAME(day, @today);
	SELECT @lastday = convert(VARCHAR(20), dateadd(d, -1, dateadd(m, 1, rtrim(@year) + '-' + rtrim(@month) + '-01')), 111);
	SELECT @today AS today, 
		@yestday AS yestday,
		@tomorrow AS tomorrow,
		@year AS year,
		@month AS month,
		@day AS day,
		@hour AS hour,
		@minute AS minute,
		@second AS second,
		DATENAME(day, @lastday) AS 'month_lastday'
END
GO


-- =============================================
-- 根据指定时间（默认当前时间截）返回一日、三日、一侯、一旬、一月、一年统计时段的开始和结束时间截
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE [NAME] = 'proc_get_time_frame' AND [XTYPE] = 'P')
	DROP PROCEDURE [dbo].[proc_get_time_frame]
GO
CREATE PROCEDURE [dbo].[proc_get_time_frame]
		@getdate datetime = NULL,
		@frame INT = 0
AS
	BEGIN
		SET NOCOUNT ON;
		DECLARE @day int, 								-- 当前天数
		@year VARCHAR(4), 								-- 当前年份数
		@month VARCHAR(2), 							-- 当前月份数
		@today datetime, 					-- 今天的时间截
		@day_last DATETIME,				-- 统计时段的开始时间截
		@param VARCHAR(200),			-- 时间类型参数转字符串
		@sql NVARCHAR(1000),			-- 动态生成SQL字符串
		@tomorrow datetime; 			-- 明天的时间截
		SET @param = CONVERT(varchar(100), ISNULL(@getdate, GETDATE()), 20);
		SET @sql = 'insert INTO #Tb_datetime SELECT * FROM openrowset(''sqloledb'',''Trusted_Connection=yes'',''exec [dbo].[proc_get_datetime] @getdate="' + @param + '"'')';
		IF OBJECT_ID('[dbo].[#Tb_datetime]') IS NOT NULL
			DROP TABLE [dbo].[#Tb_datetime]
		CREATE TABLE [dbo].[#Tb_datetime](
			today DATETIME,
			yestday DATETIME,
			tomorrow DATETIME,
			year INT,
			month INT,
			day INT,
			hour INT,
			minute INT,
			second INT,
			month_lastday INT
		)
		EXECUTE sp_executesql @sql;
		SELECT @today = today, @tomorrow = tomorrow, @year = year, @month = month, @day = day FROM #Tb_datetime;
		IF(@frame = 0 OR @frame = 4)
			BEGIN
				IF(@day <= 10)	--上旬
					BEGIN
						SET @day_last = CONVERT(datetime, @year + '-' + @month + '-01 08:00:00');
					END
				ELSE IF(@day > 10 AND @day <= 20)		--中旬
					BEGIN
						SET @day_last = CONVERT(datetime, @year + '-' + @month + '-11 08:00:00');
					END
				ELSE	--下旬
					BEGIN
						SET @day_last = CONVERT(datetime, @year + '-' + @month + '-21 08:00:00');
					END
			END
		IF (@frame = 0)
			BEGIN
				SELECT 1 AS 'frame', @today AS 'begin', dateadd(second, -1, @tomorrow) AS 'end', '一天' AS 'lable'
				UNION ALL
				SELECT 2 AS 'frame', CONVERT(datetime, CONVERT(varchar(100), @today-3, 23) + ' 08:00:00') AS 'begin', dateadd(second, -1, @tomorrow) AS 'end', '三天' AS 'lable'
				UNION ALL
				SELECT 3 AS 'frame', CONVERT(datetime, CONVERT(varchar(100), @today-5, 23) + ' 08:00:00') AS 'begin', dateadd(second, -1, @tomorrow) AS 'end', '一侯' AS 'lable'
				UNION ALL
				SELECT 4 AS 'frame', @day_last AS 'begin', dateadd(second, -1, @tomorrow) AS 'end', '一旬' AS 'lable'
				UNION ALL
				SELECT 5 AS 'frame', CONVERT(datetime, @year + '-' + @month + '-01 08:00:00') AS 'begin', dateadd(second, -1, @tomorrow) AS 'end', '一月' AS 'lable'
				UNION ALL
				SELECT 6 AS 'frame', CONVERT(datetime, @year + '-01-01 08:00:00') AS 'begin', dateadd(second, -1, @tomorrow) AS 'end', '一年' AS 'lable'
			END
		ELSE IF (@frame = 1)
			BEGIN
				SELECT @today AS 'begin', @tomorrow AS 'end', '一天' AS 'lable'
			END
		ELSE IF (@frame = 2)
			BEGIN
				SELECT CONVERT(datetime, CONVERT(varchar(100), @today-3, 23) + ' 08:00:00') AS 'begin', dateadd(second, -1, @tomorrow) AS 'end', '三天' AS 'lable'
			END
		ELSE IF (@frame = 3)
			BEGIN
				SELECT CONVERT(datetime, CONVERT(varchar(100), @today-5, 23) + ' 08:00:00') AS 'begin', dateadd(second, -1, @tomorrow) AS 'end', '一侯' AS 'lable'
			END
		ELSE IF (@frame = 4)
			BEGIN
				SELECT @day_last AS 'begin', dateadd(second, -1, @tomorrow) AS 'end', '一旬' AS 'lable'
			END
		ELSE IF (@frame = 5)
			BEGIN
				SELECT CONVERT(datetime, @year + '-' + @month + '-01 08:00:00') AS 'begin', dateadd(second, -1, @tomorrow) AS 'end', '一月' AS 'lable'
			END
		ELSE IF (@frame = 6)
			BEGIN
				SELECT CONVERT(datetime, @year + '-01-01 08:00:00') AS 'begin', dateadd(second, -1, @tomorrow) AS 'end', '一年' AS 'lable'
			END
	END
GO