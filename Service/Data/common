USE [master]
GO

/****** Object:  StoredProcedure [dbo].[proc_get_datetime]    Script Date: 12/20/2016 13:27:30 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[proc_get_datetime] 
	@getdate datetime = NULL
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @today datetime,		-- 给定时间的当天的时间截
		@yestday datetime,				-- 给定时间的昨天的时间截
		@tomorrow datetime, 			-- 给定时间的明天的时间截
		@hour INT, 								-- 给定时间的小时数
		@minute INT,							-- 给定时间的分钟数
		@second INT,							-- 给定时间的秒数
		@year INT, 								-- 给定时间的年份数
		@month INT, 							-- 给定时间的月份数
		@day INT, 								-- 给定时间的天数
		@lastday VARCHAR(20);			-- 给定时间当月的最后一天天数
	SET @getdate = ISNULL(@getdate, GETDATE());
	SET @hour = DATENAME(hour, @getdate);
	SET @minute = DATENAME(minute, @getdate);
	SET @second = DATENAME(second, @getdate);
	SELECT @lastday = convert(VARCHAR(20), dateadd(d, -1, dateadd(m, 1, rtrim(@year) + '-' + rtrim(@month) + '-01')), 111);
  IF(@hour > 8)
		begin
			SET @yestday = CONVERT(varchar(100), @getdate-1, 23) + ' 08:00:00';
			SET @today = CONVERT(varchar(100), @getdate, 23) + ' 08:00:00';
			SET @tomorrow = CONVERT(varchar(100), @getdate+1, 23) + ' 08:00:00';
		end
	ELSE
		begin
			SET @yestday = CONVERT(varchar(100), @getdate-2, 23) + ' 08:00:00';
			SET @today = CONVERT(varchar(100), @getdate-1, 23) + ' 08:00:00';
			SET @tomorrow = CONVERT(varchar(100), @getdate, 23) + ' 08:00:00';
		end
	SET @year = DATENAME(year, @today);
	SET @month = DATENAME(month, @today);
	SET @day = DATENAME(day, @today);
	SELECT @today AS today, 
		@yestday AS yestday,
		@tomorrow AS tomorrow,
		@year AS year,
		@month AS month,
		@day AS day,
		@hour AS hour,
		@minute AS minute,
		@second AS second,
		DATENAME(day, @lastday) AS 'month_lastday'
END
GO


CREATE FUNCTION dbo.fn_set_rsvrav(
	@stcd char(8),
	@now DATETIME,
	@sttdrcd INT
)
	returns INT
AS
	BEGIN
		DECLARE @day int, 								-- 当前天数
			@year int, 								-- 当前年份数
			@month int, 							-- 当前月份数
			@today datetime, 					-- 今天的时间截
			@day_last DATETIME,				-- 统计时段的开始时间截
			@tomorrow datetime, 			-- 明天的时间截
			@avrz NUMERIC(7, 3),			-- 当天及时平均水位
			@avw NUMERIC(9, 3),				-- 当天及时平均蓄水量
			@count int; 							-- 表单数据数
		SELECT @today = today, @tomorrow = tomorrow, @year = year, @month = month, @day = day 
		FROM openrowset('sqloledb','Trusted_Connection=yes','exec [dbo].[proc_get_datetime] @getdate=' + @now);
		IF(@sttdrcd = '1')
			BEGIN 
				SET @day_last = @today;
			END
		ELSE IF(@sttdrcd = '2')
			BEGIN
				SET @day_last = DATENAME(datetime, CONVERT(varchar(100), @today-3, 23) + ' 08:00:00');
			END
		ELSE IF(@sttdrcd = '3')
			BEGIN
				SET @day_last = DATENAME(datetime, CONVERT(varchar(100), @today-5, 23) + ' 08:00:00');
			END
		ELSE IF(@sttdrcd = '4')
			BEGIN
				IF(@day <= 10)	--上旬
					BEGIN
						SET @day_last = DATENAME(datetime, @year + '-' + @month + '-01  08:00:00');
					END
				ELSE IF(@day > 10 AND @day <= 20)		--中旬
					BEGIN
						SET @day_last = DATENAME(datetime, @year + '-' + @month + '-11  08:00:00');
					END
				ELSE	--下旬
					BEGIN
						SET @day_last = DATENAME(datetime, @year + '-' + @month + '-21  08:00:00');
					END
			END
		ELSE IF(@sttdrcd = '5')
			BEGIN
				SET @day_last = DATENAME(datetime, @year + '-' + @month + '-01  08:00:00');
			END
		ELSE
			BEGIN
				SET @day_last = DATENAME(datetime, @year + '-01-01  08:00:00');
			END
		SELECT @avrz= SUM([RZ])/COUNT(*), @avw = SUM([W])/COUNT(*) FROM [dbo].[ST_RSVR_R] WHERE [STCD] = @stcd AND [TM] BETWEEN @day_last AND @tomorrow;
		SELECT @count = COUNT(*) FROM [dbo].[ST_RSVRAV_R] WHERE [STCD] = @stcd AND CONVERT(varchar(100), [IDTM], 23) = CONVERT(varchar(100), @tomorrow, 23) AND [STTDRCD] = @sttdrcd;
		IF (@count > 0)
			BEGIN
				UPDATE [dbo].[ST_RSVRAV_R] SET [IDTM] = @now, [AVRZ] = @avrz, [AVW] = @avw 
				WHERE [STCD] = @stcd AND CONVERT(varchar(100), [IDTM], 23) = CONVERT(varchar(100), @tomorrow, 23) AND [STTDRCD] = @sttdrcd;
			END
		ELSE
			BEGIN
				INSERT [dbo].[ST_RSVRAV_R] ([STCD], [IDTM], [STTDRCD], [AVRZ], [AVW]) VALUES (@stcd, @now, @sttdrcd, @avrz, @avw);
			END
		RETURN 1;
	END